<?php

/**
 * 
 * Blanchy Polangcos
 * 
 * Malware analysis
 * 
 */

    if(session_id() == '') {
        session_start();
    }

    if ($_SESSION['check'] != hash('ripemd128', $_SERVER['REMOTE_ADDR'] .
    $_SERVER['HTTP_USER_AGENT'])) {
        echo "Your current location does not match the one given for this session. Try logging in again.";
        require_once("logout.php");
        exit;
    }

    if (!isset($_SESSION['un'])) {
        echo "You are not authorized to view this page. Please log in again.<br>";
            require_once("logout.php");
            exit;
    }

    /**
     * takes file handler
     * returns array of matching malwares
     */
function isMalware($fh) {
    require_once('dbproperties.php');
    $conn = new mysqli($host, $un, $pw, $db);
    if ($conn->connect_error) die($conn->connect_error);
    $results = retrieveMals($conn, $fh);
    return $results;
}

/**
 * retrieves malwares from database and matches it with input file
 */
function retrieveMals($conn, $fh) {
    
    $malnames = array();

    $query = "SELECT mname, signature FROM malwares";

    $result = $conn->query($query);
    if (!$result) {
        echo "Error executing query <br>";
        die($conn->error);
    }
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            rewind($fh);
            $sig = $row['signature'];
            
            if (matchesPattern($sig, $fh)) {
                array_push($malnames, $row['mname']);
            }
        }
    }
    else {
        echo "There's nothing in the database to compare it to! <br>";
    }
    $result->close();
    return $malnames;
}

/**
 * sanitize each input file line to match with possible signatures
 */
function sanitize($s) {
    if (get_magic_quotes_gpc()) $s = stripslashes($s);
    $s = strip_tags($s);
    return htmlentities($s);
}

/**
 * check each line for a match
 */
function matchesPattern($pattern, $fh) {
    $found = false;
    while (($line = fgets($fh)) !== false && !$found) {
        $index = strrpos(sanitize($line), $pattern); // pattern was sanitized upon insertion into the database
        if ($index !== false) {
            $found = true;
        }
    }
    return $found;
}

?>